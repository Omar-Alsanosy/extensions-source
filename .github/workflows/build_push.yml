name: CI

on:
  push:
    branches:
      - main
    paths:
      - '**'
      - '!**.md'
      - '!.github/**'
      - '.github/scripts/**'
      - '.github/workflows/build_push.yml'
  workflow_dispatch:

permissions: {}

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

env:
  CI_CHUNK_SIZE: 65
  IS_PR_CHECK: false

jobs:
  prepare:
    name: Prepare job
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      matrix: ${{ steps.generate-matrices.outputs.matrix }}
      delete: ${{ steps.generate-matrices.outputs.delete }}
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: true

      - name: Get last successful CI commit
        uses: nrwl/nx-set-shas@v4
        with:
          fallback-sha: 4b825dc642cb6eb9a060e54bf8d69288fbee4904

      - id: generate-matrices
        name: Create output matrices
        run: |
          python ./.github/scripts/generate-build-matrices.py "$NX_BASE" Release

  build:
    name: Build OrcaManga
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Prepare signing key
        run: |
          echo ${{ secrets.SIGNING_KEY }} | base64 -d > signingkey.jks

      - name: Build OrcaManga extension
        env:
          ALIAS: ${{ secrets.ALIAS }}
          KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: ./gradlew :src:ar:orcamanga:assembleRelease -x lintKotlinMain -x lint

      - name: Upload OrcaManga APK
        uses: actions/upload-artifact@v4
        with:
          name: "orcamanga-apk"
          path: "src/ar/orcamanga/build/outputs/**/*.apk"
          retention-days: 1

      - name: Clean up CI files
        run: rm signingkey.jks

  publish:
    name: Publish extension repo
    needs: [prepare, build]
    if: "github.repository == 'keiyoushi/extensions-source'"
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Download APK artifacts
        uses: actions/download-artifact@v4
        with:
          path: ~/apk-artifacts

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main
          path: main
          persist-credentials: false

      - name: Create repo artifacts
        run: |
          cd main
          python ./.github/scripts/move-built-apks.py
          INSPECTOR_LINK="$(curl -s "https://api.github.com/repos/keiyoushi/extensions-inspector/releases/latest" | jq -r '.assets[0].browser_download_url')"
          curl -L "$INSPECTOR_LINK" -o ./Inspector.jar
          java -jar ./Inspector.jar "repo/apk" "output.json" "tmp"
          python ./.github/scripts/create-repo.py

      - name: Checkout repo branch
        uses: actions/checkout@v4
        with:
          repository: keiyoushi/extensions
          token: ${{ secrets.BOT_PAT }}
          ref: repo
          path: repo
          persist-credentials: true

      - name: Merge and deploy repo
        env:
          DELETE: ${{ needs.prepare.outputs.delete }}
        run: |
          cd repo
          python ../main/.github/scripts/merge-repo.py "$DELETE"
          ../main/.github/scripts/commit-repo.sh
